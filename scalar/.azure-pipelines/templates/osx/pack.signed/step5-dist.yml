steps:
  - task: DownloadPipelineArtifact@2
    displayName: Download signed installer
    inputs:
      artifact: _osx_installer_signed
      path: $(Build.ArtifactStagingDirectory)/package

  - script: Scalar.Signing/notarize-pkg.sh -id "$(Apple.Notarization.AppleId)" -p "$(Apple.Notarization.Password)" -pkg "$(Build.ArtifactStagingDirectory)"/package/*.pkg -b "com.microsoft.scalar.pkg"
    displayName: Notarize installer (and containing bundles & binaries)
    condition: and(succeeded(), eq(variables['SignType'], 'real'))

  - task: DownloadPipelineArtifact@2
    displayName: Download Git for Mac installer package
    inputs:
      artifact: _osx_gitformac_package
      path: $(Build.ArtifactStagingDirectory)/gitformacpkg

  - script: |
      GCMURL=$(xmllint --xpath '//Project/PropertyGroup/GcmCoreOSXPackageUrl/text()' Directory.Build.props) || exit 1
      GIT_VERSION=$(grep '<GitPackageVersion>' Directory.Build.props | grep -Eo '[0-9.]+(-\w+)*')
      Scalar.Installer.Mac/dist.sh "$(Build.ArtifactStagingDirectory)/package"/Scalar*.pkg "$GIT_VERSION" "$GCMURL" "Scalar.Installer.Mac/InstallScalar.template.sh" "$(Build.ArtifactStagingDirectory)/dist"
    displayName: Create distribution script

  - task: PublishPipelineArtifact@1
    displayName: Publish distribution drop
    inputs:
      targetPath: $(Build.ArtifactStagingDirectory)/dist
      artifactName: Installers_macOS_$(configuration)

  # We need to recompute the product version variables here as we're in a different job
  # from the initial build. We pass -SetVariablesOnly because we don't need to re-set the
  # build number, only re-set the version variables for use in this job, and the next step.
  - powershell: Scripts/CI/Set-Version.ps1 -SourceBranchCounter $(branchCounter) -SetVariablesOnly
    displayName: "Recompute product version variables"

  - task: NuGetCommand@2
    displayName: Create distribution package (internal)
    inputs:
      command: pack
      packagesToPack: 'Scalar.Installer.Mac/Installers.nuspec'
      packDestination: $(Build.ArtifactStagingDirectory)/nupkg
      buildProperties: ScalarVersion=$(fullVersion)
      basePath: $(Build.ArtifactStagingDirectory)/dist

  - task: NuGetCommand@2
    displayName: Push distribution package (internal)
    inputs:
      command: push
      packagesToPush: $(Build.ArtifactStagingDirectory)/nupkg/*.nupkg
      nuGetFeedType: external
      publishFeedCredentials: $(1ESFeedCredentials)

  - task: PublishPipelineArtifact@1
    displayName: Publish distribution package (internal)
    inputs:
      targetPath: $(Build.ArtifactStagingDirectory)/nupkg
      artifactName: Package_macOS_$(configuration)
